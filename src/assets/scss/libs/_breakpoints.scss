// breakpoints.scss v1.0 | @ajlkn | MIT licensed */

// Vars.

/// Breakpoints.
/// @var {list}
$breakpoints: () !global;

// Mixins.

/// Sets breakpoints.
/// @param {map} $x Breakpoints.
@mixin breakpoints($x: ()) {
    $breakpoints: $x !global;
}

/// Wraps @content in a @media block targeting a specific orientation.
/// @param {string} $orientation Orientation.
@mixin orientation($orientation) {
    @media screen and (orientation: #{$orientation}) {
        @content;
    }
}

/// Wraps @content in a @media block using a given query.
/// @param {string} $query Query.
@mixin breakpoint($query: null) {
    $breakpoint: null;
    $op: null;
    $media: null;

    // Determine operator, breakpoint.

    // Greater than or equal.
    @if str-slice($query, 0, 2) == ">=" {
        $op: "gte";
        $breakpoint: str-slice($query, 3);
    }
    @else if str-slice($query, 0, 2) == "<=" {
        $op: "lte";
        $breakpoint: str-slice($query, 3);
    }
    @else if str-slice($query, 0, 1) == ">" {
        $op: "gt";
        $breakpoint: str-slice($query, 2);
    }
    @else if str-slice($query, 0, 1) == "<" {
        $op: "lt";
        $breakpoint: str-slice($query, 2);
    }
    @else if str-slice($query, 0, 1) == "!" {
        $op: "not";
        $breakpoint: str-slice($query, 2);
    }
    @else {
        $op: "eq";
        $breakpoint: $query;
    }

    // Build media.
    @if $breakpoint and map-has-key($breakpoints, $breakpoint) {
        $a: map-get($breakpoints, $breakpoint);

        // Range.
        @if type-of($a) == "list" {
            $x: nth($a, 1);
            $y: nth($a, 2);

            // Max only.
            @if $x == null {
                // Greater than or equal (>= 0 / anything)
                @if $op == "gte" {
                    $media: "screen";
                }
                @else if $op == "lte" {
                    $media: "screen and (max-width: " + $y + ")";
                }
                @else if $op == "gt" {
                    $media: "screen and (min-width: " + $y + 1 + ")";
                }
                @else if $op == "lt" {
                    $media: "screen and (max-width: -1px)";
                }
                @else if $op == "not" {
                    $media: "screen and (min-width: " + $y + 1 + ")";
                }
                @else {
                    $media: "screen and (max-width: " + $y + ")";
                }
            }
            @else if $y == null {
                // Greater than or equal (>= x)
                @if $op == "gte" {
                    $media: "screen and (min-width: " + $x + ")";
                }
                @else if $op == "lte" {
                    $media: "screen";
                }
                @else if $op == "gt" {
                    $media: "screen and (max-width: -1px)";
                }
                @else if $op == "lt" {
                    $media: "screen and (max-width: " + $x - 1 + ")";
                }
                @else if $op == "not" {
                    $media: "screen and (max-width: " + $x - 1 + ")";
                }
                @else {
                    $media: "screen and (min-width: " + $x + ")";
                }
            }
            @else {
                // Greater than or equal (>= x)
                @if $op == "gte" {
                    $media: "screen and (min-width: " + $x + ")";
                }
                @else if $op == "lte" {
                    $media: "screen and (max-width: " + $y + ")";
                }
                @else if $op == "gt" {
                    $media: "screen and (min-width: " + $y + 1 + ")";
                }
                @else if $op == "lt" {
                    $media: "screen and (max-width: " + $x - 1 + ")";
                }
                @else if $op == "not" {
                    $media: "screen and (max-width: " + $x - 1 + "), screen and (min-width: " + $y + 1 + ")";
                }
                @else {
                    $media: "screen and (min-width: " + $x + ") and (max-width: " + $y + ")";
                }
            }
        }
        @else {
            // Missing a media type? Prefix with "screen".
            @if str-slice($a, 0, 1) == "(" {
                $media: "screen and " + $a;
            }
            @else {
                $media: $a;
            }
        }
    }

    // Output.
    @media #{$media} {
        @content;
    }
}

@include breakpoints((xlarge: (1281px, 1680px), large: (981px, 1280px), medium: (737px, 980px), small: (481px, 736px), xsmall: (361px, 480px), xxsmall: (null, 360px)));
